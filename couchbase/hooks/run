#!/bin/bash

exec 2>&1
echo "WOOF: RUN"

# Copyright (c) 2010-2011, Couchbase, Inc.
# All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# SOFTWARE_VERSION="{{ pkg.version }}"
# if [ x"${SOFTWARE_VERSION}" = "x" ]
# then
#    SOFTWARE_VERSION="unsupported developer build"
# fi
#
# ENTERPRISE=`echo @BUILD_ENTERPRISE@ | tr '[:upper:]' '[:lower:]'`
#
# if [ x"${ENTERPRISE}" = "xtrue" ]
# then
#    SOFTWARE_VERSION="${SOFTWARE_VERSION} (EE)"
# else
#    SOFTWARE_VERSION="${SOFTWARE_VERSION} (CE)"
# fi

PATH="{{ pkg.path }}/bin":$PATH
export PATH

ERL_LIBS="{{ pkg.path }}/lib/ns_server/erlang/lib:{{ pkg.path }}/lib/couchdb/erlang/lib:{{ pkg.path }}/lib/couchdb/plugins"
export ERL_LIBS

DEFAULT_CONFIG_DIR="{{ pkg.svc_path }}/{{ cfg.path.default_config }}/default.d"
DEFAULT_CONFIG_FILE="{{ pkg.svc_path }}/{{ cfg.path.default_config }}/default.ini"
LOCAL_CONFIG_DIR="{{ pkg.svc_path }}/{{ cfg.path.local_config }}/default.d"
LOCAL_CONFIG_FILE="{{ pkg.svc_path }}/{{ cfg.path.local_config }}/local.ini"

PIDFILE="{{ pkg.svc_path }}/{{ cfg.path.pidfile }}"
COOKIEFILE="{{ pkg.svc_path }}/{{ cfg.path.cookiefile }}"
NODEFILE="{{ pkg.svc_path }}/{{ cfg.path.nodefile }}"

couch_start_arguments=""

LD_LIBRARY_PATH="{{ pkg.path }}/lib":"{{ pkg.path }}/lib/memcached":$LD_LIBRARY_PATH
export LD_LIBRARY_PATH

ERL_CRASH_DUMP_BASE=erl_crash.dump.$(date +%s).$$
ERL_CRASH_DUMP=$ERL_CRASH_DUMP_BASE.babysitter
export ERL_CRASH_DUMP_BASE
export ERL_CRASH_DUMP

ERL_FULLSWEEP_AFTER=512
export ERL_FULLSWEEP_AFTER

# For some obscure reason erl requires HOME environment variable to be set.
# bdangit: it set because erl wants to look at $HOME/.erlang
#          since `hab` doesn't have write access to /root, we forcefully set
#          this to /tmp
export HOME=/tmp

_check_nofile () {
    if [ `ulimit -n` -lt 40960 ]
    then
        cat <<EOF

The maximum number of open files for the couchbase user is set too low.
It must be at least 40960.

EOF

        if [ -f /etc/security/limits.conf ]
        then
            cat <<EOF
Normally this can be increased by adding the following lines to
/etc/security/limits.conf:

couchbase              soft    nofile                  <value>
couchbase              hard    nofile                  <value>

Where <value> is greater than 40960. The procedure may be totally
different if you're running so called "non-root/non-sudo install" or
if you've built Couchbase Server from source.

EOF
        fi
    fi
}

_prepare_datadir () {
    datadir="{{ pkg.svc_path }}/{{ cfg.path.data }}"

    test -d "$datadir" || mkdir -p "$datadir"
    cd "$datadir"
}

_maybe_start_epmd () {
    # Initialize distributed erlang on the system (i.e. epmd)
    erl -noshell -setcookie nocookie -sname init -run init stop 2>&1 > /dev/null
    if [ $? -ne 0 ]
    then
        exit 1
    fi
}

_add_config_file () {
    couch_start_arguments="$couch_start_arguments $1"
}

_add_config_dir () {
    for file in "$1"/*.ini; do
        if [ -r "$file" ]; then
          _add_config_file "$file"
        fi
    done
}

_load_config () {
    _add_config_file "$DEFAULT_CONFIG_FILE"
    _add_config_dir "$DEFAULT_CONFIG_DIR"
    _add_config_file "$LOCAL_CONFIG_FILE"
    _add_config_dir "$LOCAL_CONFIG_DIR"
    if [ "$COUCHDB_ADDITIONAL_CONFIG_FILE" != '' ]
    then
        _add_config_file "$COUCHDB_ADDITIONAL_CONFIG_FILE"
    fi
}

_drop_old_crashdumps () {
    KEEP="`ls -1 erl_crash.dump.* 2>/dev/null | sort | tail -n 10`"
    for file in erl_crash.dump.*; do
        if [[ "$KEEP" != *$file* ]]; then
            rm -f $file
        fi
    done
}


## MAIN
_check_nofile
_prepare_datadir
# _maybe_start_epmd
_load_config

# note: we depend on pwd being $datadir from _prepare_datadir
_drop_old_crashdumps

umask 007

exec erl \
    +A 16 \
    -smp enable \
    -kernel inet_dist_listen_min 21100 inet_dist_listen_max 21299 \
            error_logger false \
            global_enable_tracing true \
    -sasl sasl_error_logger false \
    -hidden \
    -name 'babysitter_of_ns_1@127.0.0.1' \
    -setcookie nocookie \
    -noinput \
    -run ns_babysitter_bootstrap -- \
    -couch_ini $couch_start_arguments \
    -ns_babysitter cookiefile "\"$COOKIEFILE\"" \
    -ns_server config_path "\"{{ pkg.svc_path }}/{{ cfg.path.etc }}/static_config\"" \
    -ns_server pidfile "\"$PIDFILE\"" \
    -ns_server cookiefile "\"$COOKIEFILE-ns-server\"" \
    -ns_server enable_mlockall ${COUCHBASE_ENABLE_MLOCKALL:-false}

#     -ns_babysitter nodefile "\"$NODEFILE\"" \
